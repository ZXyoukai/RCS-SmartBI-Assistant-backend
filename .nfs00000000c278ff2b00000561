#!/usr/bin/env python3
"""
Script para reinstalar e testar dependências
"""
import subprocess
import sys
import importlib

def install_package(package):
    """Instala um pacote usando pip"""
    try:
        subprocess.check_call([sys.executable, "-m", "pip", "install", package])
        print(f"✅ {package} instalado com sucesso")
        return True
    except subprocess.CalledProcessError as e:
        print(f"❌ Erro ao instalar {package}: {e}")
        return False

def test_import(module_name, package_name):
    """Testa se um módulo pode ser importado"""
    try:
        importlib.import_module(module_name)
        print(f"✅ {package_name} funcionando")
        return True
    except ImportError as e:
        print(f"❌ {package_name} não funciona: {e}")
        return False

def main():
    print("🔧 Reinstalando dependências do SmartBI Assistant...")
    print()
    
    # Lista de dependências do requirements.txt
    packages = [
        "pandas",
        "fastapi",
        "uvicorn[standard]", 
        "python-multipart",
        "google-generativeai",
        "python-dotenv",
        "sqlparse",
        "pydantic"
    ]
    
    # Instalar cada pacote
    for package in packages:
        print(f"📦 Instalando {package}...")
        install_package(package)
        print()
    
    print("🧪 Testando importações...")
    print()
    
    # Testar importações críticas
    test_cases = [
        ("pandas", "pandas"),
        ("fastapi", "FastAPI"),
        ("uvicorn", "Uvicorn"),
        ("google.generativeai", "Google Generative AI"),
        ("dotenv", "python-dotenv"),
        ("sqlparse", "sqlparse"),
        ("pydantic", "Pydantic")
    ]
    
    all_working = True
    for module, name in test_cases:
        if not test_import(module, name):
            all_working = False
    
    print()
    if all_working:
        print("🎉 Todas as dependências instaladas e funcionando!")
        
        # Teste específico do python-dotenv
        print("\n🔍 Testando python-dotenv especificamente...")
        try:
            from dotenv import load_dotenv
            import os
            
            # Criar arquivo .env de teste
            with open('.env.test', 'w') as f:
                f.write('TEST_VAR=test_value\n')
            
            # Carregar e testar
            load_dotenv('.env.test')
            test_value = os.getenv('TEST_VAR')
            
            if test_value == 'test_value':
                print("✅ python-dotenv funcionando perfeitamente!")
            else:
                print("❌ python-dotenv não carregou variável corretamente")
            
            # Limpar arquivo de teste
            os.remove('.env.test')
            
        except Exception as e:
            print(f"❌ Erro ao testar python-dotenv: {e}")
    else:
        print("❌ Algumas dependências falharam")
    
    return all_working

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
